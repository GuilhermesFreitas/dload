#!/usr/bin/env python3

import os
import subprocess
import sys
import re
import shutil
from pathlib import Path
from datetime import datetime

BANNER = """
    ========================================
          Dload - Fastdownload      
    ========================================
"""

MENU = """
1. üéµ Baixar √Åudio (MP3)
2. üé¨ Baixar V√≠deo (MP4)
3. ‚ùå Sair
"""

def verificar_ytdlp():
    if shutil.which("yt-dlp") is None:
        print(" ‚ùå yt-dlp n√£o encontrado! Por favor, instale com:")
        print("   ‚û§ pacman -S yt-dlp  (ou)")
        print("   ‚û§ pipx install yt-dlp")
        sys.exit(1)

def pasta_destino(opcao):
    home = Path.home()
    music_dir = home / "M√∫sica" if (home / "M√∫sica").exists() else home / "Musicas"

    if opcao == "1":
        return home / "Downloads"
    elif opcao == "2":
        return home / "Videos"
    elif opcao == "3":
        return music_dir
    else:
        return home / "Downloads"

def verificar_espaco(pasta, tamanho_minimo=100):
    stat = shutil.disk_usage(pasta)
    if stat.free < tamanho_minimo * 1024 * 1024:
        print(f"‚ö†Ô∏è  Espa√ßo insuficiente em {pasta}!")
        return False
    return True

def listar_formatos_disponiveis(url):
    print("\n üîç Buscando resolu√ß√µes dispon√≠veis...")

    try:
        resultado = subprocess.run(
            ["yt-dlp", "-F", url],
            capture_output=True, text=True, check=True
        )
        linhas = resultado.stdout.splitlines()

        print("\nüéûÔ∏è  Formatos dispon√≠veis (v√≠deo + √°udio):\n")
        print("ID   ‚îÇ RESOLU√á√ÉO ‚îÇ   EXT    ‚îÇ INFO")
        print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

        formatos_validos = []

        for linha in linhas:
            if re.search(r'\b(audio only|video only)\b', linha):
                continue
            if re.match(r'^\d{1,4}\s', linha):
                print(linha)
                formatos_validos.append(linha)

        return True if formatos_validos else False

    except subprocess.CalledProcessError as e:
        print("‚ùå Erro ao buscar formatos:", e.stderr)
        return False

def verificar_atualizacao():
    try:
        resultado = subprocess.run(["yt-dlp", "-U"], capture_output=True, text=True)
        print(resultado.stdout.splitlines()[-1])
    except Exception as e:
        print("‚ö†Ô∏è  N√£o foi poss√≠vel verificar atualiza√ß√µes:", e)

def verificar_cookies():
    if os.path.exists("cookies.txt"):
        print("‚ö†Ô∏è  Aviso: arquivo 'cookies.txt' detectado. Certifique-se de que √© seguro usar cookies locais.")

def registrar_download(url, destino):
    try:
        with open(Path.home()/".dload_history", "a") as f:
            f.write(f"{datetime.now():%Y-%m-%d %H:%M} | {url} | {destino}\n")
    except Exception as e:
        print(f"‚ö†Ô∏è  N√£o foi poss√≠vel registrar no hist√≥rico: {e}")

def baixar_audio():
    url = input("\n üåç Cole a URL do v√≠deo: ").strip()
    if not url:
        print("‚ùå URL n√£o pode ser vazia!")
        return

    print("\n üìÇ Escolha onde salvar:")
    print("1 - Pasta Downloads\n2 - Pasta Videos\n3 - Pasta M√∫sicas")
    opcao = input("Digite o n√∫mero da op√ß√£o (1-3): ").strip()
    destino = pasta_destino(opcao)

    if not verificar_espaco(destino):
        return

    cmd = [
        "yt-dlp", "-x", "--audio-format", "mp3",
        "--audio-quality", "0",
        "--embed-thumbnail",
        "--output", f"{destino}/%(title)s.%(ext)s", url
    ]

    verificar_cookies()

    try:
        subprocess.run(cmd, check=True)
        registrar_download(url, destino)
        print("‚úÖ Download de √°udio conclu√≠do!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao baixar √°udio: {e.stderr}")

def baixar_video():
    url = input("\n üåç Cole a URL do v√≠deo: ").strip()
    if not url:
        print("‚ùå URL n√£o pode ser vazia!")
        return

    print("\n üìÇ Escolha onde salvar:")
    print("1 - Pasta Downloads\n2 - Pasta Videos\n3 - Pasta M√∫sicas")
    opcao = input("Digite o n√∫mero da op√ß√£o (1-3): ").strip()
    destino = pasta_destino(opcao)

    if not verificar_espaco(destino):
        return

    listar = input(" üîç Listar formatos dispon√≠veis? (s/N): ").lower()
    if listar == "s":
        if not listar_formatos_disponiveis(url):
            return

    formato = input("\n‚å®Ô∏è Digite o ID do formato (ex: 18, 22) ou pressione Enter para melhor qualidade: ").strip()
    
    cmd = [
        "yt-dlp",
        "--merge-output-format", "mp4",
        "--write-subs", "--sub-langs", "pt,en",
        "--embed-thumbnail",
        "-o", f"{destino}/%(title)s.%(ext)s",
    ]
    
    if formato and formato.isdigit():
        cmd += ["-f", formato]
    
    cmd.append(url)

    verificar_cookies()

    try:
        subprocess.run(cmd, check=True)
        registrar_download(url, destino)
        print("‚úÖ Download de v√≠deo conclu√≠do!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao baixar v√≠deo: {e.stderr}")

def main():
    print(BANNER)
    verificar_ytdlp()
    verificar_atualizacao()

    while True:
        print(MENU)
        escolha = input("Escolha (1-3): ").strip()

        if escolha == "1":
            baixar_audio()
        elif escolha == "2":
            baixar_video()
        elif escolha == "3":
            print("üëã Saindo...")
            sys.exit(0)
        else:
            print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")

if __name__ == "__main__":
    main()